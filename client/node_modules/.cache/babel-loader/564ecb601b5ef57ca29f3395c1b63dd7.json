{"ast":null,"code":"import _classCallCheck from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/src/App.jsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport qAPI from './qAPI/qAPI';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.api = new qAPI();\n    _this.state = {\n      id: 0,\n      question: null,\n      //bad name\n      guess: '',\n      answered: false,\n      totalScore: 0\n    };\n\n    _this.api.getQuestion(_this.state.id).then(function (res) {\n      return _this.setState({\n        question: res\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onEnter\",\n    value: function onEnter() {\n      var _this2 = this;\n\n      if (this.state.answered) {\n        this.api.getQuestion(this.state.id + 1).then(function (res) {\n          return _this2.setState({\n            question: res,\n            id: _this2.state.id + 1,\n            answered: false\n          });\n        });\n      } else {\n        this.setState({\n          answered: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"STATBOY\"), React.createElement(\"div\", {\n        key: this.state.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \">\", this.state.question ? this.state.question.q : ''), React.createElement(\"h3\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"(\", this.state.question ? this.state.question.unit : '', \")\"), React.createElement(\"input\", {\n        onKeyPress: function onKeyPress(e) {\n          return e.keyCode || e.charCode == 13 ? _this3.onEnter() : '';\n        },\n        onChange: function onChange(e) {\n          return _this3.setState({\n            guess: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.answered ? this.state.question.a : 'press enter', \" \"), React.createElement(\"h3\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"score:\", this.state.answered ? Math.abs(Math.log(this.state.question.a) - Math.log(this.state.guess)) / Math.log(this.state.question.a) : '---')));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/src/App.jsx"],"names":["React","Component","qAPI","App","api","state","id","question","guess","answered","totalScore","getQuestion","then","res","setState","q","unit","e","keyCode","charCode","onEnter","target","value","a","Math","abs","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport qAPI from './qAPI/qAPI';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.api = new qAPI();\n\t\tthis.state = {\n\t\t\tid: 0,\n\t\t\tquestion: null, //bad name\n\t\t\tguess: '',\n\t\t\tanswered: false,\n\t\t\ttotalScore: 0,\n\t\t};\n\t\tthis.api.getQuestion(this.state.id).then(res => this.setState({ question: res }));\n\t}\n\n\tonEnter() {\n\t\tif (this.state.answered) {\n\t\t\tthis.api\n\t\t\t\t.getQuestion(this.state.id + 1)\n\t\t\t\t.then(res => this.setState({ question: res, id: this.state.id + 1, answered: false }));\n\t\t} else {\n\t\t\tthis.setState({ answered: true });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>STATBOY</h1>\n\t\t\t\t<div key={this.state.id}>\n\t\t\t\t\t<h2 className=\"text-left\">>{this.state.question ? this.state.question.q : ''}</h2>\n\t\t\t\t\t<h3 className=\"text-left\">({this.state.question ? this.state.question.unit : ''})</h3>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonKeyPress={e => (e.keyCode || e.charCode == 13 ? this.onEnter() : '')}\n\t\t\t\t\t\tonChange={e => this.setState({ guess: e.target.value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<h3 className=\"text-center\">{this.state.answered ? this.state.question.a : 'press enter'} </h3>\n\t\t\t\t\t<h3 className=\"text-left\">\n\t\t\t\t\t\tscore:\n\t\t\t\t\t\t{this.state.answered\n\t\t\t\t\t\t\t? Math.abs(Math.log(this.state.question.a) - Math.log(this.state.guess)) /\n\t\t\t\t\t\t\t  Math.log(this.state.question.a)\n\t\t\t\t\t\t\t: '---'}\n\t\t\t\t\t</h3>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}