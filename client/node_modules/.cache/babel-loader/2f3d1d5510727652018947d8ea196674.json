{"ast":null,"code":"import _classCallCheck from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/src/App.jsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport qAPI from './qAPI/qAPI';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.api = new qAPI();\n    _this.state = {\n      id: 0,\n      question: null,\n      //bad name\n      guess: \"\",\n      answered: false,\n      totalScore: 0\n    };\n\n    _this.api.getQuestion(0).then(function (res) {\n      return _this.setState({\n        question: res\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onEnter\",\n    value: function onEnter() {\n      var _this2 = this;\n\n      if (this.state.answered) {\n        this.api.getQuestion(0).then(function (res) {\n          return _this2.setState({\n            question: res\n          });\n        });\n      } else {\n        this.setState({\n          answered: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"STATBOY\"), React.createElement(\"h2\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \">\", this.state.question ? this.state.question.q : \"\"), React.createElement(\"h3\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"(\", this.state.question ? this.state.question.unit : \"\", \")\"), React.createElement(\"input\", {\n        onKeyPress: function onKeyPress(e) {\n          return e.keyCode || e.charCode == 13 ? _this3.onEnter() : \"\";\n        },\n        onChange: function onChange(e) {\n          return _this3.setState({\n            guess: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.state.answered ? this.state.question.a : \"press enter\", \" \"), React.createElement(\"h3\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"score:\", this.state.answered ? Math.abs(Math.log(this.state.question.a) - Math.log(this.state.guess)) / Math.log(this.state.question.a) : \"---\", \" \"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nicolas/KTH/Interaktions_Programmering/statboy/client/src/App.jsx"],"names":["React","Component","qAPI","App","api","state","id","question","guess","answered","totalScore","getQuestion","then","res","setState","q","unit","e","keyCode","charCode","onEnter","target","value","a","Math","abs","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport qAPI from './qAPI/qAPI';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.api = new qAPI();\n\t\tthis.state = {\n\t\t\tid:0,\n\t\t\tquestion:null, //bad name\n\t\t\tguess:\"\",\n\t\t\tanswered:false,\n\t\t\ttotalScore:0\n\t\t};\n\t\tthis.api.getQuestion(0).then(res => this.setState({ question:res }));\n\t}\n\n\tonEnter(){\n\t\tif(this.state.answered){\n\t\t\tthis.api.getQuestion(0).then(res => this.setState({ question:res }));\n\n\t\t}\n\t\telse{\n\t\t\tthis.setState({answered:true})\n\n\t\t}\n\t\t\n\t}\n\n\n\n\trender() {\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>STATBOY</h1>\n\t\t\t\t<h2 className=\"text-left\">>{this.state.question?this.state.question.q:\"\"}</h2>\n\t\t\t\t<h3 className=\"text-left\">({this.state.question?this.state.question.unit:\"\"})</h3>\n\t\t\t\t<input onKeyPress={(e)=>e.keyCode||e.charCode==13?this.onEnter():\"\"}   onChange={e=>this.setState({guess:e.target.value})}></input>\n\t\t\t\t<h3 className=\"text-center\">{this.state.answered?this.state.question.a:\"press enter\"} </h3>\n\t\t\t\t<h3 className=\"text-left\">score:{\n\t\t\t\t\tthis.state.answered?Math.abs((Math.log(this.state.question.a)-Math.log(this.state.guess)))/Math.log(this.state.question.a):\"---\"} </h3>\n\t\t\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}